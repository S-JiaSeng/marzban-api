/*
 * MarzbanAPI
 * Unified GUI Censorship Resistant Solution Powered by Xray
 *
 * OpenAPI spec version: 0.7.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ProxySettings;
import io.swagger.client.model.UserDataLimitResetStrategy;
import io.swagger.client.model.UserStatusModify;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;
/**
 * UserModify
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-26T06:54:11.907891916Z[GMT]")

public class UserModify {
  @SerializedName("proxies")
  private Map<String, ProxySettings> proxies = null;

  @SerializedName("expire")
  private Integer expire = null;

  @SerializedName("data_limit")
  private Integer dataLimit = null;

  @SerializedName("data_limit_reset_strategy")
  private UserDataLimitResetStrategy dataLimitResetStrategy = null;

  @SerializedName("inbounds")
  private Map<String, List<String>> inbounds = null;

  @SerializedName("note")
  private String note = null;

  @SerializedName("sub_updated_at")
  private OffsetDateTime subUpdatedAt = null;

  @SerializedName("sub_last_user_agent")
  private String subLastUserAgent = null;

  @SerializedName("online_at")
  private OffsetDateTime onlineAt = null;

  @SerializedName("on_hold_expire_duration")
  private Integer onHoldExpireDuration = null;

  @SerializedName("on_hold_timeout")
  private OffsetDateTime onHoldTimeout = null;

  @SerializedName("auto_delete_in_days")
  private Integer autoDeleteInDays = null;

  @SerializedName("status")
  private UserStatusModify status = null;

  public UserModify proxies(Map<String, ProxySettings> proxies) {
    this.proxies = proxies;
    return this;
  }

  public UserModify putProxiesItem(String key, ProxySettings proxiesItem) {
    if (this.proxies == null) {
      this.proxies = new HashMap<String, ProxySettings>();
    }
    this.proxies.put(key, proxiesItem);
    return this;
  }

   /**
   * Get proxies
   * @return proxies
  **/
  @Schema(description = "")
  public Map<String, ProxySettings> getProxies() {
    return proxies;
  }

  public void setProxies(Map<String, ProxySettings> proxies) {
    this.proxies = proxies;
  }

  public UserModify expire(Integer expire) {
    this.expire = expire;
    return this;
  }

   /**
   * Get expire
   * @return expire
  **/
  @Schema(description = "")
  public Integer getExpire() {
    return expire;
  }

  public void setExpire(Integer expire) {
    this.expire = expire;
  }

  public UserModify dataLimit(Integer dataLimit) {
    this.dataLimit = dataLimit;
    return this;
  }

   /**
   * data_limit can be 0 or greater
   * minimum: 0
   * @return dataLimit
  **/
  @Schema(description = "data_limit can be 0 or greater")
  public Integer getDataLimit() {
    return dataLimit;
  }

  public void setDataLimit(Integer dataLimit) {
    this.dataLimit = dataLimit;
  }

  public UserModify dataLimitResetStrategy(UserDataLimitResetStrategy dataLimitResetStrategy) {
    this.dataLimitResetStrategy = dataLimitResetStrategy;
    return this;
  }

   /**
   * Get dataLimitResetStrategy
   * @return dataLimitResetStrategy
  **/
  @Schema(description = "")
  public UserDataLimitResetStrategy getDataLimitResetStrategy() {
    return dataLimitResetStrategy;
  }

  public void setDataLimitResetStrategy(UserDataLimitResetStrategy dataLimitResetStrategy) {
    this.dataLimitResetStrategy = dataLimitResetStrategy;
  }

  public UserModify inbounds(Map<String, List<String>> inbounds) {
    this.inbounds = inbounds;
    return this;
  }

  public UserModify putInboundsItem(String key, List<String> inboundsItem) {
    if (this.inbounds == null) {
      this.inbounds = new HashMap<String, List<String>>();
    }
    this.inbounds.put(key, inboundsItem);
    return this;
  }

   /**
   * Get inbounds
   * @return inbounds
  **/
  @Schema(description = "")
  public Map<String, List<String>> getInbounds() {
    return inbounds;
  }

  public void setInbounds(Map<String, List<String>> inbounds) {
    this.inbounds = inbounds;
  }

  public UserModify note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @Schema(description = "")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public UserModify subUpdatedAt(OffsetDateTime subUpdatedAt) {
    this.subUpdatedAt = subUpdatedAt;
    return this;
  }

   /**
   * Get subUpdatedAt
   * @return subUpdatedAt
  **/
  @Schema(description = "")
  public OffsetDateTime getSubUpdatedAt() {
    return subUpdatedAt;
  }

  public void setSubUpdatedAt(OffsetDateTime subUpdatedAt) {
    this.subUpdatedAt = subUpdatedAt;
  }

  public UserModify subLastUserAgent(String subLastUserAgent) {
    this.subLastUserAgent = subLastUserAgent;
    return this;
  }

   /**
   * Get subLastUserAgent
   * @return subLastUserAgent
  **/
  @Schema(description = "")
  public String getSubLastUserAgent() {
    return subLastUserAgent;
  }

  public void setSubLastUserAgent(String subLastUserAgent) {
    this.subLastUserAgent = subLastUserAgent;
  }

  public UserModify onlineAt(OffsetDateTime onlineAt) {
    this.onlineAt = onlineAt;
    return this;
  }

   /**
   * Get onlineAt
   * @return onlineAt
  **/
  @Schema(description = "")
  public OffsetDateTime getOnlineAt() {
    return onlineAt;
  }

  public void setOnlineAt(OffsetDateTime onlineAt) {
    this.onlineAt = onlineAt;
  }

  public UserModify onHoldExpireDuration(Integer onHoldExpireDuration) {
    this.onHoldExpireDuration = onHoldExpireDuration;
    return this;
  }

   /**
   * Get onHoldExpireDuration
   * @return onHoldExpireDuration
  **/
  @Schema(description = "")
  public Integer getOnHoldExpireDuration() {
    return onHoldExpireDuration;
  }

  public void setOnHoldExpireDuration(Integer onHoldExpireDuration) {
    this.onHoldExpireDuration = onHoldExpireDuration;
  }

  public UserModify onHoldTimeout(OffsetDateTime onHoldTimeout) {
    this.onHoldTimeout = onHoldTimeout;
    return this;
  }

   /**
   * Get onHoldTimeout
   * @return onHoldTimeout
  **/
  @Schema(description = "")
  public OffsetDateTime getOnHoldTimeout() {
    return onHoldTimeout;
  }

  public void setOnHoldTimeout(OffsetDateTime onHoldTimeout) {
    this.onHoldTimeout = onHoldTimeout;
  }

  public UserModify autoDeleteInDays(Integer autoDeleteInDays) {
    this.autoDeleteInDays = autoDeleteInDays;
    return this;
  }

   /**
   * Get autoDeleteInDays
   * @return autoDeleteInDays
  **/
  @Schema(description = "")
  public Integer getAutoDeleteInDays() {
    return autoDeleteInDays;
  }

  public void setAutoDeleteInDays(Integer autoDeleteInDays) {
    this.autoDeleteInDays = autoDeleteInDays;
  }

  public UserModify status(UserStatusModify status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public UserStatusModify getStatus() {
    return status;
  }

  public void setStatus(UserStatusModify status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserModify userModify = (UserModify) o;
    return Objects.equals(this.proxies, userModify.proxies) &&
        Objects.equals(this.expire, userModify.expire) &&
        Objects.equals(this.dataLimit, userModify.dataLimit) &&
        Objects.equals(this.dataLimitResetStrategy, userModify.dataLimitResetStrategy) &&
        Objects.equals(this.inbounds, userModify.inbounds) &&
        Objects.equals(this.note, userModify.note) &&
        Objects.equals(this.subUpdatedAt, userModify.subUpdatedAt) &&
        Objects.equals(this.subLastUserAgent, userModify.subLastUserAgent) &&
        Objects.equals(this.onlineAt, userModify.onlineAt) &&
        Objects.equals(this.onHoldExpireDuration, userModify.onHoldExpireDuration) &&
        Objects.equals(this.onHoldTimeout, userModify.onHoldTimeout) &&
        Objects.equals(this.autoDeleteInDays, userModify.autoDeleteInDays) &&
        Objects.equals(this.status, userModify.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(proxies, expire, dataLimit, dataLimitResetStrategy, inbounds, note, subUpdatedAt, subLastUserAgent, onlineAt, onHoldExpireDuration, onHoldTimeout, autoDeleteInDays, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserModify {\n");
    
    sb.append("    proxies: ").append(toIndentedString(proxies)).append("\n");
    sb.append("    expire: ").append(toIndentedString(expire)).append("\n");
    sb.append("    dataLimit: ").append(toIndentedString(dataLimit)).append("\n");
    sb.append("    dataLimitResetStrategy: ").append(toIndentedString(dataLimitResetStrategy)).append("\n");
    sb.append("    inbounds: ").append(toIndentedString(inbounds)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    subUpdatedAt: ").append(toIndentedString(subUpdatedAt)).append("\n");
    sb.append("    subLastUserAgent: ").append(toIndentedString(subLastUserAgent)).append("\n");
    sb.append("    onlineAt: ").append(toIndentedString(onlineAt)).append("\n");
    sb.append("    onHoldExpireDuration: ").append(toIndentedString(onHoldExpireDuration)).append("\n");
    sb.append("    onHoldTimeout: ").append(toIndentedString(onHoldTimeout)).append("\n");
    sb.append("    autoDeleteInDays: ").append(toIndentedString(autoDeleteInDays)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
