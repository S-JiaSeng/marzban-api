/*
 * MarzbanAPI
 * Unified GUI Censorship Resistant Solution Powered by Xray
 *
 * OpenAPI spec version: 0.7.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * AdminCreate
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-26T06:54:11.907891916Z[GMT]")

public class AdminCreate {
  @SerializedName("username")
  private String username = null;

  @SerializedName("is_sudo")
  private Boolean isSudo = null;

  @SerializedName("telegram_id")
  private Integer telegramId = null;

  @SerializedName("discord_webhook")
  private String discordWebhook = null;

  @SerializedName("password")
  private String password = null;

  public AdminCreate username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(required = true, description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public AdminCreate isSudo(Boolean isSudo) {
    this.isSudo = isSudo;
    return this;
  }

   /**
   * Get isSudo
   * @return isSudo
  **/
  @Schema(required = true, description = "")
  public Boolean isIsSudo() {
    return isSudo;
  }

  public void setIsSudo(Boolean isSudo) {
    this.isSudo = isSudo;
  }

  public AdminCreate telegramId(Integer telegramId) {
    this.telegramId = telegramId;
    return this;
  }

   /**
   * Get telegramId
   * @return telegramId
  **/
  @Schema(description = "")
  public Integer getTelegramId() {
    return telegramId;
  }

  public void setTelegramId(Integer telegramId) {
    this.telegramId = telegramId;
  }

  public AdminCreate discordWebhook(String discordWebhook) {
    this.discordWebhook = discordWebhook;
    return this;
  }

   /**
   * Get discordWebhook
   * @return discordWebhook
  **/
  @Schema(description = "")
  public String getDiscordWebhook() {
    return discordWebhook;
  }

  public void setDiscordWebhook(String discordWebhook) {
    this.discordWebhook = discordWebhook;
  }

  public AdminCreate password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @Schema(required = true, description = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdminCreate adminCreate = (AdminCreate) o;
    return Objects.equals(this.username, adminCreate.username) &&
        Objects.equals(this.isSudo, adminCreate.isSudo) &&
        Objects.equals(this.telegramId, adminCreate.telegramId) &&
        Objects.equals(this.discordWebhook, adminCreate.discordWebhook) &&
        Objects.equals(this.password, adminCreate.password);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, isSudo, telegramId, discordWebhook, password);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdminCreate {\n");
    
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    isSudo: ").append(toIndentedString(isSudo)).append("\n");
    sb.append("    telegramId: ").append(toIndentedString(telegramId)).append("\n");
    sb.append("    discordWebhook: ").append(toIndentedString(discordWebhook)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
