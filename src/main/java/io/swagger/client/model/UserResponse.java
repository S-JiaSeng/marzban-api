/*
 * MarzbanAPI
 * Unified GUI Censorship Resistant Solution Powered by Xray
 *
 * OpenAPI spec version: 0.7.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Admin;
import io.swagger.client.model.UserStatus;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;
/**
 * UserResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-26T06:54:11.907891916Z[GMT]")

public class UserResponse {
  @SerializedName("proxies")
  private Object proxies = null;

  @SerializedName("expire")
  private Integer expire = null;

  @SerializedName("data_limit")
  private Integer dataLimit = null;

  @SerializedName("data_limit_reset_strategy")
  private AllOfUserResponseDataLimitResetStrategy dataLimitResetStrategy = null;

  @SerializedName("inbounds")
  private Map<String, List<String>> inbounds = null;

  @SerializedName("note")
  private String note = null;

  @SerializedName("sub_updated_at")
  private OffsetDateTime subUpdatedAt = null;

  @SerializedName("sub_last_user_agent")
  private String subLastUserAgent = null;

  @SerializedName("online_at")
  private OffsetDateTime onlineAt = null;

  @SerializedName("on_hold_expire_duration")
  private Integer onHoldExpireDuration = null;

  @SerializedName("on_hold_timeout")
  private OffsetDateTime onHoldTimeout = null;

  @SerializedName("auto_delete_in_days")
  private Integer autoDeleteInDays = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("status")
  private UserStatus status = null;

  @SerializedName("used_traffic")
  private Integer usedTraffic = null;

  @SerializedName("lifetime_used_traffic")
  private Integer lifetimeUsedTraffic = 0;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("links")
  private List<String> links = null;

  @SerializedName("subscription_url")
  private String subscriptionUrl = "";

  @SerializedName("excluded_inbounds")
  private Map<String, List<String>> excludedInbounds = null;

  @SerializedName("admin")
  private Admin admin = null;

  public UserResponse proxies(Object proxies) {
    this.proxies = proxies;
    return this;
  }

   /**
   * Get proxies
   * @return proxies
  **/
  @Schema(required = true, description = "")
  public Object getProxies() {
    return proxies;
  }

  public void setProxies(Object proxies) {
    this.proxies = proxies;
  }

  public UserResponse expire(Integer expire) {
    this.expire = expire;
    return this;
  }

   /**
   * Get expire
   * @return expire
  **/
  @Schema(description = "")
  public Integer getExpire() {
    return expire;
  }

  public void setExpire(Integer expire) {
    this.expire = expire;
  }

  public UserResponse dataLimit(Integer dataLimit) {
    this.dataLimit = dataLimit;
    return this;
  }

   /**
   * data_limit can be 0 or greater
   * minimum: 0
   * @return dataLimit
  **/
  @Schema(description = "data_limit can be 0 or greater")
  public Integer getDataLimit() {
    return dataLimit;
  }

  public void setDataLimit(Integer dataLimit) {
    this.dataLimit = dataLimit;
  }

  public UserResponse dataLimitResetStrategy(AllOfUserResponseDataLimitResetStrategy dataLimitResetStrategy) {
    this.dataLimitResetStrategy = dataLimitResetStrategy;
    return this;
  }

   /**
   * Get dataLimitResetStrategy
   * @return dataLimitResetStrategy
  **/
  @Schema(description = "")
  public AllOfUserResponseDataLimitResetStrategy getDataLimitResetStrategy() {
    return dataLimitResetStrategy;
  }

  public void setDataLimitResetStrategy(AllOfUserResponseDataLimitResetStrategy dataLimitResetStrategy) {
    this.dataLimitResetStrategy = dataLimitResetStrategy;
  }

  public UserResponse inbounds(Map<String, List<String>> inbounds) {
    this.inbounds = inbounds;
    return this;
  }

  public UserResponse putInboundsItem(String key, List<String> inboundsItem) {
    if (this.inbounds == null) {
      this.inbounds = new HashMap<String, List<String>>();
    }
    this.inbounds.put(key, inboundsItem);
    return this;
  }

   /**
   * Get inbounds
   * @return inbounds
  **/
  @Schema(description = "")
  public Map<String, List<String>> getInbounds() {
    return inbounds;
  }

  public void setInbounds(Map<String, List<String>> inbounds) {
    this.inbounds = inbounds;
  }

  public UserResponse note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @Schema(description = "")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public UserResponse subUpdatedAt(OffsetDateTime subUpdatedAt) {
    this.subUpdatedAt = subUpdatedAt;
    return this;
  }

   /**
   * Get subUpdatedAt
   * @return subUpdatedAt
  **/
  @Schema(description = "")
  public OffsetDateTime getSubUpdatedAt() {
    return subUpdatedAt;
  }

  public void setSubUpdatedAt(OffsetDateTime subUpdatedAt) {
    this.subUpdatedAt = subUpdatedAt;
  }

  public UserResponse subLastUserAgent(String subLastUserAgent) {
    this.subLastUserAgent = subLastUserAgent;
    return this;
  }

   /**
   * Get subLastUserAgent
   * @return subLastUserAgent
  **/
  @Schema(description = "")
  public String getSubLastUserAgent() {
    return subLastUserAgent;
  }

  public void setSubLastUserAgent(String subLastUserAgent) {
    this.subLastUserAgent = subLastUserAgent;
  }

  public UserResponse onlineAt(OffsetDateTime onlineAt) {
    this.onlineAt = onlineAt;
    return this;
  }

   /**
   * Get onlineAt
   * @return onlineAt
  **/
  @Schema(description = "")
  public OffsetDateTime getOnlineAt() {
    return onlineAt;
  }

  public void setOnlineAt(OffsetDateTime onlineAt) {
    this.onlineAt = onlineAt;
  }

  public UserResponse onHoldExpireDuration(Integer onHoldExpireDuration) {
    this.onHoldExpireDuration = onHoldExpireDuration;
    return this;
  }

   /**
   * Get onHoldExpireDuration
   * @return onHoldExpireDuration
  **/
  @Schema(description = "")
  public Integer getOnHoldExpireDuration() {
    return onHoldExpireDuration;
  }

  public void setOnHoldExpireDuration(Integer onHoldExpireDuration) {
    this.onHoldExpireDuration = onHoldExpireDuration;
  }

  public UserResponse onHoldTimeout(OffsetDateTime onHoldTimeout) {
    this.onHoldTimeout = onHoldTimeout;
    return this;
  }

   /**
   * Get onHoldTimeout
   * @return onHoldTimeout
  **/
  @Schema(description = "")
  public OffsetDateTime getOnHoldTimeout() {
    return onHoldTimeout;
  }

  public void setOnHoldTimeout(OffsetDateTime onHoldTimeout) {
    this.onHoldTimeout = onHoldTimeout;
  }

  public UserResponse autoDeleteInDays(Integer autoDeleteInDays) {
    this.autoDeleteInDays = autoDeleteInDays;
    return this;
  }

   /**
   * Get autoDeleteInDays
   * @return autoDeleteInDays
  **/
  @Schema(description = "")
  public Integer getAutoDeleteInDays() {
    return autoDeleteInDays;
  }

  public void setAutoDeleteInDays(Integer autoDeleteInDays) {
    this.autoDeleteInDays = autoDeleteInDays;
  }

  public UserResponse username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(required = true, description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public UserResponse status(UserStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(required = true, description = "")
  public UserStatus getStatus() {
    return status;
  }

  public void setStatus(UserStatus status) {
    this.status = status;
  }

  public UserResponse usedTraffic(Integer usedTraffic) {
    this.usedTraffic = usedTraffic;
    return this;
  }

   /**
   * Get usedTraffic
   * @return usedTraffic
  **/
  @Schema(required = true, description = "")
  public Integer getUsedTraffic() {
    return usedTraffic;
  }

  public void setUsedTraffic(Integer usedTraffic) {
    this.usedTraffic = usedTraffic;
  }

  public UserResponse lifetimeUsedTraffic(Integer lifetimeUsedTraffic) {
    this.lifetimeUsedTraffic = lifetimeUsedTraffic;
    return this;
  }

   /**
   * Get lifetimeUsedTraffic
   * @return lifetimeUsedTraffic
  **/
  @Schema(description = "")
  public Integer getLifetimeUsedTraffic() {
    return lifetimeUsedTraffic;
  }

  public void setLifetimeUsedTraffic(Integer lifetimeUsedTraffic) {
    this.lifetimeUsedTraffic = lifetimeUsedTraffic;
  }

  public UserResponse createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public UserResponse links(List<String> links) {
    this.links = links;
    return this;
  }

  public UserResponse addLinksItem(String linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<String>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @Schema(description = "")
  public List<String> getLinks() {
    return links;
  }

  public void setLinks(List<String> links) {
    this.links = links;
  }

  public UserResponse subscriptionUrl(String subscriptionUrl) {
    this.subscriptionUrl = subscriptionUrl;
    return this;
  }

   /**
   * Get subscriptionUrl
   * @return subscriptionUrl
  **/
  @Schema(description = "")
  public String getSubscriptionUrl() {
    return subscriptionUrl;
  }

  public void setSubscriptionUrl(String subscriptionUrl) {
    this.subscriptionUrl = subscriptionUrl;
  }

  public UserResponse excludedInbounds(Map<String, List<String>> excludedInbounds) {
    this.excludedInbounds = excludedInbounds;
    return this;
  }

  public UserResponse putExcludedInboundsItem(String key, List<String> excludedInboundsItem) {
    if (this.excludedInbounds == null) {
      this.excludedInbounds = new HashMap<String, List<String>>();
    }
    this.excludedInbounds.put(key, excludedInboundsItem);
    return this;
  }

   /**
   * Get excludedInbounds
   * @return excludedInbounds
  **/
  @Schema(description = "")
  public Map<String, List<String>> getExcludedInbounds() {
    return excludedInbounds;
  }

  public void setExcludedInbounds(Map<String, List<String>> excludedInbounds) {
    this.excludedInbounds = excludedInbounds;
  }

  public UserResponse admin(Admin admin) {
    this.admin = admin;
    return this;
  }

   /**
   * Get admin
   * @return admin
  **/
  @Schema(description = "")
  public Admin getAdmin() {
    return admin;
  }

  public void setAdmin(Admin admin) {
    this.admin = admin;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserResponse userResponse = (UserResponse) o;
    return Objects.equals(this.proxies, userResponse.proxies) &&
        Objects.equals(this.expire, userResponse.expire) &&
        Objects.equals(this.dataLimit, userResponse.dataLimit) &&
        Objects.equals(this.dataLimitResetStrategy, userResponse.dataLimitResetStrategy) &&
        Objects.equals(this.inbounds, userResponse.inbounds) &&
        Objects.equals(this.note, userResponse.note) &&
        Objects.equals(this.subUpdatedAt, userResponse.subUpdatedAt) &&
        Objects.equals(this.subLastUserAgent, userResponse.subLastUserAgent) &&
        Objects.equals(this.onlineAt, userResponse.onlineAt) &&
        Objects.equals(this.onHoldExpireDuration, userResponse.onHoldExpireDuration) &&
        Objects.equals(this.onHoldTimeout, userResponse.onHoldTimeout) &&
        Objects.equals(this.autoDeleteInDays, userResponse.autoDeleteInDays) &&
        Objects.equals(this.username, userResponse.username) &&
        Objects.equals(this.status, userResponse.status) &&
        Objects.equals(this.usedTraffic, userResponse.usedTraffic) &&
        Objects.equals(this.lifetimeUsedTraffic, userResponse.lifetimeUsedTraffic) &&
        Objects.equals(this.createdAt, userResponse.createdAt) &&
        Objects.equals(this.links, userResponse.links) &&
        Objects.equals(this.subscriptionUrl, userResponse.subscriptionUrl) &&
        Objects.equals(this.excludedInbounds, userResponse.excludedInbounds) &&
        Objects.equals(this.admin, userResponse.admin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(proxies, expire, dataLimit, dataLimitResetStrategy, inbounds, note, subUpdatedAt, subLastUserAgent, onlineAt, onHoldExpireDuration, onHoldTimeout, autoDeleteInDays, username, status, usedTraffic, lifetimeUsedTraffic, createdAt, links, subscriptionUrl, excludedInbounds, admin);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserResponse {\n");
    
    sb.append("    proxies: ").append(toIndentedString(proxies)).append("\n");
    sb.append("    expire: ").append(toIndentedString(expire)).append("\n");
    sb.append("    dataLimit: ").append(toIndentedString(dataLimit)).append("\n");
    sb.append("    dataLimitResetStrategy: ").append(toIndentedString(dataLimitResetStrategy)).append("\n");
    sb.append("    inbounds: ").append(toIndentedString(inbounds)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    subUpdatedAt: ").append(toIndentedString(subUpdatedAt)).append("\n");
    sb.append("    subLastUserAgent: ").append(toIndentedString(subLastUserAgent)).append("\n");
    sb.append("    onlineAt: ").append(toIndentedString(onlineAt)).append("\n");
    sb.append("    onHoldExpireDuration: ").append(toIndentedString(onHoldExpireDuration)).append("\n");
    sb.append("    onHoldTimeout: ").append(toIndentedString(onHoldTimeout)).append("\n");
    sb.append("    autoDeleteInDays: ").append(toIndentedString(autoDeleteInDays)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    usedTraffic: ").append(toIndentedString(usedTraffic)).append("\n");
    sb.append("    lifetimeUsedTraffic: ").append(toIndentedString(lifetimeUsedTraffic)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    subscriptionUrl: ").append(toIndentedString(subscriptionUrl)).append("\n");
    sb.append("    excludedInbounds: ").append(toIndentedString(excludedInbounds)).append("\n");
    sb.append("    admin: ").append(toIndentedString(admin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
