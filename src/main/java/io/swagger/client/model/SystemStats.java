/*
 * MarzbanAPI
 * Unified GUI Censorship Resistant Solution Powered by Xray
 *
 * OpenAPI spec version: 0.7.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * SystemStats
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-26T06:54:11.907891916Z[GMT]")

public class SystemStats {
  @SerializedName("version")
  private String version = null;

  @SerializedName("mem_total")
  private Integer memTotal = null;

  @SerializedName("mem_used")
  private Integer memUsed = null;

  @SerializedName("cpu_cores")
  private Integer cpuCores = null;

  @SerializedName("cpu_usage")
  private BigDecimal cpuUsage = null;

  @SerializedName("total_user")
  private Integer totalUser = null;

  @SerializedName("users_active")
  private Integer usersActive = null;

  @SerializedName("incoming_bandwidth")
  private Integer incomingBandwidth = null;

  @SerializedName("outgoing_bandwidth")
  private Integer outgoingBandwidth = null;

  @SerializedName("incoming_bandwidth_speed")
  private Integer incomingBandwidthSpeed = null;

  @SerializedName("outgoing_bandwidth_speed")
  private Integer outgoingBandwidthSpeed = null;

  public SystemStats version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(required = true, description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public SystemStats memTotal(Integer memTotal) {
    this.memTotal = memTotal;
    return this;
  }

   /**
   * Get memTotal
   * @return memTotal
  **/
  @Schema(required = true, description = "")
  public Integer getMemTotal() {
    return memTotal;
  }

  public void setMemTotal(Integer memTotal) {
    this.memTotal = memTotal;
  }

  public SystemStats memUsed(Integer memUsed) {
    this.memUsed = memUsed;
    return this;
  }

   /**
   * Get memUsed
   * @return memUsed
  **/
  @Schema(required = true, description = "")
  public Integer getMemUsed() {
    return memUsed;
  }

  public void setMemUsed(Integer memUsed) {
    this.memUsed = memUsed;
  }

  public SystemStats cpuCores(Integer cpuCores) {
    this.cpuCores = cpuCores;
    return this;
  }

   /**
   * Get cpuCores
   * @return cpuCores
  **/
  @Schema(required = true, description = "")
  public Integer getCpuCores() {
    return cpuCores;
  }

  public void setCpuCores(Integer cpuCores) {
    this.cpuCores = cpuCores;
  }

  public SystemStats cpuUsage(BigDecimal cpuUsage) {
    this.cpuUsage = cpuUsage;
    return this;
  }

   /**
   * Get cpuUsage
   * @return cpuUsage
  **/
  @Schema(required = true, description = "")
  public BigDecimal getCpuUsage() {
    return cpuUsage;
  }

  public void setCpuUsage(BigDecimal cpuUsage) {
    this.cpuUsage = cpuUsage;
  }

  public SystemStats totalUser(Integer totalUser) {
    this.totalUser = totalUser;
    return this;
  }

   /**
   * Get totalUser
   * @return totalUser
  **/
  @Schema(required = true, description = "")
  public Integer getTotalUser() {
    return totalUser;
  }

  public void setTotalUser(Integer totalUser) {
    this.totalUser = totalUser;
  }

  public SystemStats usersActive(Integer usersActive) {
    this.usersActive = usersActive;
    return this;
  }

   /**
   * Get usersActive
   * @return usersActive
  **/
  @Schema(required = true, description = "")
  public Integer getUsersActive() {
    return usersActive;
  }

  public void setUsersActive(Integer usersActive) {
    this.usersActive = usersActive;
  }

  public SystemStats incomingBandwidth(Integer incomingBandwidth) {
    this.incomingBandwidth = incomingBandwidth;
    return this;
  }

   /**
   * Get incomingBandwidth
   * @return incomingBandwidth
  **/
  @Schema(required = true, description = "")
  public Integer getIncomingBandwidth() {
    return incomingBandwidth;
  }

  public void setIncomingBandwidth(Integer incomingBandwidth) {
    this.incomingBandwidth = incomingBandwidth;
  }

  public SystemStats outgoingBandwidth(Integer outgoingBandwidth) {
    this.outgoingBandwidth = outgoingBandwidth;
    return this;
  }

   /**
   * Get outgoingBandwidth
   * @return outgoingBandwidth
  **/
  @Schema(required = true, description = "")
  public Integer getOutgoingBandwidth() {
    return outgoingBandwidth;
  }

  public void setOutgoingBandwidth(Integer outgoingBandwidth) {
    this.outgoingBandwidth = outgoingBandwidth;
  }

  public SystemStats incomingBandwidthSpeed(Integer incomingBandwidthSpeed) {
    this.incomingBandwidthSpeed = incomingBandwidthSpeed;
    return this;
  }

   /**
   * Get incomingBandwidthSpeed
   * @return incomingBandwidthSpeed
  **/
  @Schema(required = true, description = "")
  public Integer getIncomingBandwidthSpeed() {
    return incomingBandwidthSpeed;
  }

  public void setIncomingBandwidthSpeed(Integer incomingBandwidthSpeed) {
    this.incomingBandwidthSpeed = incomingBandwidthSpeed;
  }

  public SystemStats outgoingBandwidthSpeed(Integer outgoingBandwidthSpeed) {
    this.outgoingBandwidthSpeed = outgoingBandwidthSpeed;
    return this;
  }

   /**
   * Get outgoingBandwidthSpeed
   * @return outgoingBandwidthSpeed
  **/
  @Schema(required = true, description = "")
  public Integer getOutgoingBandwidthSpeed() {
    return outgoingBandwidthSpeed;
  }

  public void setOutgoingBandwidthSpeed(Integer outgoingBandwidthSpeed) {
    this.outgoingBandwidthSpeed = outgoingBandwidthSpeed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemStats systemStats = (SystemStats) o;
    return Objects.equals(this.version, systemStats.version) &&
        Objects.equals(this.memTotal, systemStats.memTotal) &&
        Objects.equals(this.memUsed, systemStats.memUsed) &&
        Objects.equals(this.cpuCores, systemStats.cpuCores) &&
        Objects.equals(this.cpuUsage, systemStats.cpuUsage) &&
        Objects.equals(this.totalUser, systemStats.totalUser) &&
        Objects.equals(this.usersActive, systemStats.usersActive) &&
        Objects.equals(this.incomingBandwidth, systemStats.incomingBandwidth) &&
        Objects.equals(this.outgoingBandwidth, systemStats.outgoingBandwidth) &&
        Objects.equals(this.incomingBandwidthSpeed, systemStats.incomingBandwidthSpeed) &&
        Objects.equals(this.outgoingBandwidthSpeed, systemStats.outgoingBandwidthSpeed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, memTotal, memUsed, cpuCores, cpuUsage, totalUser, usersActive, incomingBandwidth, outgoingBandwidth, incomingBandwidthSpeed, outgoingBandwidthSpeed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemStats {\n");
    
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    memTotal: ").append(toIndentedString(memTotal)).append("\n");
    sb.append("    memUsed: ").append(toIndentedString(memUsed)).append("\n");
    sb.append("    cpuCores: ").append(toIndentedString(cpuCores)).append("\n");
    sb.append("    cpuUsage: ").append(toIndentedString(cpuUsage)).append("\n");
    sb.append("    totalUser: ").append(toIndentedString(totalUser)).append("\n");
    sb.append("    usersActive: ").append(toIndentedString(usersActive)).append("\n");
    sb.append("    incomingBandwidth: ").append(toIndentedString(incomingBandwidth)).append("\n");
    sb.append("    outgoingBandwidth: ").append(toIndentedString(outgoingBandwidth)).append("\n");
    sb.append("    incomingBandwidthSpeed: ").append(toIndentedString(incomingBandwidthSpeed)).append("\n");
    sb.append("    outgoingBandwidthSpeed: ").append(toIndentedString(outgoingBandwidthSpeed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
